// $Id$
// vim:ft=javascript

ARG_ENABLE("riak", "Riak php support", "no");
if (PHP_RIAK != "no") {
        if (CHECK_HEADER_ADD_INCLUDE("riack.h", "CFLAGS_RIAK", PHP_RIAK + ";" + configure_module_dirname + "/LibRiack/src"))
	{
                EXTENSION("riak", "php_riak.c riak_session.c  ht_utils.c ", true, "/I" + configure_module_dirname + "/LibRiack/src");
                ADD_SOURCES(configure_module_dirname + "/riak", "connection.c bucket.c object.c bucket_properties.c pool.c link.c pool_info.c object_list.c server_info.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/map_reduce", "mapreduce.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/map_reduce/input", "input.c bucket_input.c key_data_list_input.c key_list_input.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/map_reduce/output", "output.c stream_output.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/map_reduce/phase", "phase.c map_phase.c reduce_phase.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/map_reduce/functions", "base_function.c erlang_function.c javascript_function.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/output", "output.c get_output.c put_output.c key_stream_output.c index_result.c index_result_list.c index_output.c conflict_resolver.c youngest_sibling_resolver.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/input", "input.c delete_input.c get_input.c put_input.c index_input.c get_resolver_input.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/exception", "exception.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/crdt", "counter.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/crdt/input", "update_input.c get_input.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/search", "search.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/query", "index_query.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/search/input", "parameter_bag.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/search/output", "output.c document_output.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/property", "module_function.c commit_hook.c commit_hook_list.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/riak/property/replication_mode", "replication_mode.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/LibRiack/src", "riack_sock.c riack.c riack_kv.c riack_search.c riack_msg.c riack_mem.c riack_helpers.c riack_2i.c riack_crdt.c riack_mapreduce.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/LibRiack/src/google/protobuf-c", "protobuf-c.c", "riak");
                ADD_SOURCES(configure_module_dirname + "/LibRiack/src/protocol", "riak_msg_codes.c riak_search.pb-c.c riak.pb-c.c riak_kv.pb-c.c", "riak");

		ADD_FLAG("CFLAGS_RIAK", "/I " + configure_module_dirname);
		ADD_FLAG("CFLAGS_RIAK", "/D riack_EXPORTS");
		AC_DEFINE('HAVE_RIAK', 1);
                AC_DEFINE('PHP_RIAK_SESSION', 1);
		ADD_EXTENSION_DEP('riak', 'json');
                ADD_EXTENSION_DEP('riak', 'spl');
		ADD_EXTENSION_DEP('riak', 'session');
	} else {
                WARNING("Riack header not found, did you remember to checkout the LibRiack submodule?");
	}
}
